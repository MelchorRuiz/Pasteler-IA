---
import { getI18N, getPaths } from "../i18n";
const i18n = getI18N(Astro.currentLocale);
const paths = getPaths(Astro.currentLocale);

const links = [
  { href: paths.home, text: i18n.menu.home },
  { href: paths.catalog, text: i18n.menu.catalog },
  { href: paths.recommendations, text: i18n.menu.recommendations },
];
---

<nav
  class="fixed w-screen flex justify-between px-5 lg:px-10 py-4 items-center text-white z-30"
>
  <div class="flex gap-1 items-center">
    <img src="/favicon.svg" alt="favicon" class="w-8 h-8 lg:w-10 lg:h-10" />
    <p class="text-lg lg:text-2xl uppercase">Pasteler-IA</p>
  </div>
  <div id="menu" class="cursor-pointer lg:hidden">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      stroke-width="1.5"
      stroke="currentColor"
      class="size-6"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
    </svg>
  </div>
  <ul
    class="fixed lg:relative top-0 left-0 bottom-0 right-0 bg-darkGray/90 lg:bg-transparent flex flex-col lg:flex-row justify-center items-center gap-5 lg:text-lg z-20"
  >
    {
      links.map((link) => (
        <li>
          <a
            href={link.href}
            class="relative lg:after:w-0 lg:hover:after:w-full lg:after:h-[2px] lg:hover:after:bg-white lg:after:absolute lg:after:-bottom-2 lg:after:left-0 lg:after:rounded-lg lg:after:transition-all lg:after:duration-300 lg:after:ease-in-out"
          >
            {link.text}
          </a>
        </li>
      ))
    }
    <li>
      <select
        name="language"
        id="language"
        class="p-2 bg-black cursor-pointer rounded-lg ring-1 ring-white focus-visible:outline-none"
      >
        <option value="es" selected={Astro.currentLocale === "es"}
          >Español</option
        >
        <option value="en" selected={Astro.currentLocale === "en"}
          >English</option
        >
        <option value="fr" selected={Astro.currentLocale === "fr"}
          >Français</option
        >
      </select>
    </li>
  </ul>
</nav>

<style>
  nav {
    animation: fadeIn 0.5s ease;
    animation-timeline: scroll();
    animation-range: 0 100vh;
    background: theme("colors.darkGray");
  }
  @keyframes fadeIn {
    from {
      background-color: transparent;
      backdrop-filter: blur(0px);
    }
    to {
      background: theme("colors.darkGray");
      backdrop-filter: blur(5px);
    }
  }
</style>

<script>
  const language = document.querySelector("#language") as HTMLSelectElement;
  language.addEventListener("change", () => {
    const path = language.value === "es" ? "/" : `/${language.value}`;
    window.location.href = path;
  });
</script>
<script>
  const svg = document.querySelector("#menu") as HTMLElement;
  const ul = document.querySelector("nav ul") as HTMLUListElement;
  const isActivated = false;

  const addListeners = () => {
    if (window.innerWidth < 1024) {
      ul.style.display = "none";
      svg.addEventListener("click", () => {
        if (isActivated) {
          ul.style.display = "none";
        } else {
          ul.style.display = "flex";
        }
      });
      ul.addEventListener("click", (e) => {
        const target = e.target as HTMLElement;
        if (target.tagName !== "UL") return;
        ul.style.display = "none";
      });
    } else {
      ul.style.display = "flex";
    }
  };
  addListeners();
  window.addEventListener("resize", addListeners);
</script>
