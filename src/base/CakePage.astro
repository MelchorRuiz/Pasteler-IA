---
import Layout from "../layouts/Layout.astro";
import { getI18N, getPaths } from "..//i18n";

const i18n = getI18N(Astro.currentLocale);
const paths = getPaths(Astro.currentLocale);
const { id } = Astro.params;
interface CakeData {
  id: string;
  name: string;
  quantity: string;
  description: string;
  img: string;
}

const response = await fetch(`${Astro.url.origin}/api/cake?id=${id}`);
const cake: CakeData = await response.json();
---

<Layout title={cake.name}>
  <main class="mt-28 text-white px-5 lg:px-20 grid md:grid-cols-5 gap-10">
    <div class="md:col-span-2">
      <img
        class="rounded-xl"
        src={cake.img}
        alt={cake.name}
        transition:name={id}
      />
    </div>
    <div class="md:col-span-3">
      <h1 class="text-2xl md:text-4xl lg:text-6xl">{cake.name}</h1>
      <p class="py-2">{cake.quantity}</p>
      <p class="text-sm lg:text-base text-yellow-400">{cake.description}</p>
      <div class="flex flex-col lg:flex-row lg:gap-4">
        {Astro.locals.user ? (
          <button class="bg-indigo-500 hover:bg-indigo-600 h-fit mt-4 py-3 px-4 rounded-lg">
            {i18n.catalog.add_to_cart}
          </button>
          <div class="bg-transparent" id="wallet_container"></div>
        ) : (
          <a
            href={paths.login}
            class="bg-indigo-500 hover:bg-indigo-600 h-fit mt-4 py-3 px-4 rounded-lg"
          >
            {i18n.catalog.login_to_buy}
          </a>
        )}
      </div>
    </div>
  </main>
</Layout>
<script src="https://sdk.mercadopago.com/js/v2" is:inline></script>
<script
  is:inline
  define:vars={{
    cakeId: id,
    publicKey: import.meta.env.MERCADOPAGO_PUBLIC_KEY,
  }}
>
  const main = async () => {
    const response = await fetch("/api/payments/create-preference", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        products: [
          {
            id: cakeId,
            quantity: 1,
          },
        ],
      }),
    });

    const { id } = await response.json();
    const mp = new MercadoPago(publicKey);

    mp.bricks().create("wallet", "wallet_container", {
      initialization: {
        preferenceId: id,
      },
      customization: {
        texts: {
          action: "buy",
        },
      },
    });
  };

  main();
</script>
