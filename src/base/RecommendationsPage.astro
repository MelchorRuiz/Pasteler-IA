---
import Layout from '../layouts/Layout.astro';
import { getI18N, getPaths } from '../i18n';
const i18n = getI18N(Astro.currentLocale);
const paths = getPaths(Astro.currentLocale);
---

<Layout title="Pasteler-IA">
  <main class="my-10 text-white px-5 lg:px-20 flex flex-col">
    <div class="py-10 text-center">
      <h1 class="text-2xl md:text-4xl lg:text-6xl">{i18n.recommendations.title}</h1>
      <p class="text-sm lg:text-base text-yellow-400 pt-3">{i18n.recommendations.description}</p>
    </div>
    <form class="flex flex-col items-center w-full lg:w-1/2 mx-auto gap-4" id="form-description">
      <label class="sr-only" for="description">Your Description</label>
      <textarea class="text-black h-48 p-4 bg-white/60 resize-none w-full" name="description" placeholder="hola" />
      <button class="py-3 bg-yellow-400/40 text-black w-full" type="submit">{i18n.recommendations.send}</button>
    </form>
    <div class="fixed top-0 left-0 w-screen h-screen hidden px-4" id="modal-recommendation">
      <div class="m-auto lg:w-1/2 flex gap-4 bg-neutral-600/95 p-5 rounded-lg">
        <img class="w-1/3 rounded-xl" src="/chef.webp" alt="">
        <div class="flex flex-col justify-between pb-4">
          <div>
            <h3 class="text-2xl font-semibold">{i18n.recommendations.chef_suggestion}:</h3>
            <p class="pt-3"></p>
          </div>
          <a class="text-blue-500" href={paths.catalog}>
            Pastel Pi√±a Colada
          </a>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  const form = document.getElementById('form-description') as HTMLFormElement;
  const modal = document.getElementById('modal-recommendation') as HTMLDivElement;
  const recommendation = modal.querySelector('p') as HTMLParagraphElement;
  const link = modal.querySelector('a') as HTMLAnchorElement;

  form.addEventListener('submit', async (event) => {
    event.preventDefault();
    
    const formData = new FormData(form);
    const description = formData.get('description');
    
    const response = await fetch('/api/ai/recommendations', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ description }),
    });
    const data = await response.json();
    link.href += '/' + data.cakeId
    link.textContent = data.cakeName;
    recommendation.textContent = data.recommendation;
    modal.style.display = 'flex';
  });
</script>